import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

static def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss")
    df.setTimeZone(TimeZone.getTimeZone("Europe/Berlin"))
    return df.format(new Date())
}

android {
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }

    lint {
        abortOnError false
    }

    namespace 'org.zephyrsoft.trackworktime'

    defaultConfig {
        if (app_suffix == null || app_suffix.trim().isEmpty()) {
            applicationId "org.zephyrsoft.trackworktime"
            resValue "string", "app_name", "${app_title}"
            buildConfigField "String", "APP_NAME", "\"${app_title}\""
        } else {
            applicationId "org.zephyrsoft.trackworktime_" + app_suffix.replaceAll("[^a-zA-Z0-9]", "")
            resValue "string", "app_name", "${app_title} ${app_suffix}"
            buildConfigField "String", "APP_NAME", "\"${app_title} ${app_suffix}\""
        }

        versionCode 71                      // increment after every release (for the next development cycle)
        versionName '1.1.26-SNAPSHOT'       // change with every release

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        minSdkVersion 21
        targetSdkVersion 35
        compileSdk 35
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                obfuscate false
                optimizeCode false
            }
        }
    }

    // rename final APK files
    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "TrackWorkTime_${variant.versionName}_${buildTime()}_${variant.buildType.name}${variant.signingReady ? "" : "-unsigned"}.apk"
        }
    }
}

dependencies {
    def acraVersion = "5.12.0"

    implementation 'com.github.mathisdt:timezonepicker:cb06a1b0f9'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "ch.acra:acra-http:$acraVersion"
    implementation "ch.acra:acra-dialog:$acraVersion"
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'com.google.guava:guava:33.4.8-android'
    implementation 'net.sf.supercsv:super-csv:2.4.0'
    implementation 'org.tinylog:tinylog:1.3.6'

    compileOnly "com.google.auto.service:auto-service-annotations:1.1.1"
    annotationProcessor "com.google.auto.service:auto-service:1.1.1"

    runtimeOnly 'androidx.lifecycle:lifecycle-viewmodel:2.8.7'
    runtimeOnly 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.4.4'
    testImplementation 'org.mockito:mockito-core:5.17.0'
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'

    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    modules {
        module("com.google.guava:listenablefuture") {
            replacedBy("com.google.guava:guava", "listenablefuture is part of guava")
        }
    }
}
